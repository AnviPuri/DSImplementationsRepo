package com.ems.user.controller;

import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ems.user.dto.request.UserRequest;
import com.ems.user.dto.request.UserUpdateRequest;
import com.ems.user.dto.response.UserResponse;
import com.ems.user.entity.User;
import com.ems.user.excel.ExcelGenerator;
import com.ems.user.repo.UserRepo;
import com.ems.user.service.UserService;

@RestController
@RequestMapping("/api/user")
public class UserController {

	@Autowired
	private UserService userServiceImpl;
	
	@Autowired
	private UserRepo userRepo;

	@PostMapping(produces = "application/json")
	public UserResponse createUser(@Valid @RequestBody UserRequest userRequest) {

		return userServiceImpl.createUser(userRequest);
	}

	@PutMapping(value = "/{userId}", produces = "application/json")
	public UserResponse updateUser(@Valid @RequestBody UserUpdateRequest userUpdateRequest,
			@PathVariable String userId) {

		return userServiceImpl.updateUser(userUpdateRequest, userId);
	}

	@DeleteMapping(value = "/{userId}", produces = "application/json")
	public boolean deleteUser(@PathVariable String userId) {

		return userServiceImpl.deleteUser(userId);
	}

	@GetMapping(value = "/{userId}", produces = "application/json")
	public UserResponse getByUserId(@PathVariable String userId) {

		return userServiceImpl.getByUserId(userId);
	}

	@GetMapping(value = "/all/user-type", produces = "application/json")
	public HashMap<String, Object> getAllUsersByUserType(
			@RequestParam(value = "pageNumber", defaultValue = "1") int pageNumber,
			@RequestParam(value = "pageSize", defaultValue = "10") int pageSize,
			@RequestParam(value = "userType", defaultValue = "EMPLOYEE") String userType) {

		return userServiceImpl.getAllUsers(userType, pageNumber, pageSize);
	}

	@GetMapping(value = "/all/search", produces = "application/json")
	public HashMap<String, Object> searchUsersByUserTypeAndFirstName(
			@RequestParam(value = "pageNumber", defaultValue = "1") int pageNumber,
			@RequestParam(value = "pageSize", defaultValue = "10") int pageSize,
			@RequestParam(value = "userType", defaultValue = "EMPLOYEE") String userType,
			@RequestParam(value = "searchQuery") String searchQuery) {

		return userServiceImpl.searchUsersByUserTypeAndFirstName(pageNumber, pageSize, userType, searchQuery);
	}

		
	
	@GetMapping(value = "/records/user/export", produces = "application/json")
	public void exportActiveUserDataInExcel(HttpServletResponse response) throws IOException {
		
		DateFormat dateFormat = new SimpleDateFormat("YYYY-MM-DD:HH:MM:SS");
        String fileType = "attachment; filename=employee_details_" + dateFormat.format(new Date()) + ".xls";
        response.setHeader("Content-Disposition", fileType);
        response.setContentType(MediaType.APPLICATION_OCTET_STREAM.getType());
		
		//response.setContentType("application/octet-stream");
		
//		DateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss");
//		String currentDateTime = dateFormatter.format(new Date());
//		
//		String headerKey = "Content-Disposition";
//		String headerValue = "attachment; filename=records_" + currentDateTime + ".xlsx";
//		response.setHeader(headerKey, headerValue);
		
		List<User> listOfUsers = userRepo.findAll();
		
		System.out.println(listOfUsers.size());

		ExcelGenerator generator = new ExcelGenerator(listOfUsers);

		generator.generate(response);
		
	}

}
